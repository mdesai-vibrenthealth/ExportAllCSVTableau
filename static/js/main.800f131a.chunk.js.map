{"version":3,"sources":["components/Configure/logo.svg","components/Extension/ExportBtn/ExportBtn.js","components/func/func.js","components/Extension/Extension.js","components/Configure/SelectSheets/Sheet/Sheet.js","components/Configure/SelectSheets/SelectSheets.js","components/Configure/SelectColumns/Sheet/Column/Column.js","components/Configure/SelectColumns/Sheet/Sheet.js","components/Configure/SelectColumns/SelectColumns.js","components/Configure/ActionButtons/ActionButtons.js","components/Configure/ConfigureTab/ConfigureTab.js","components/Configure/Configure.js","components/DesktopExport/DesktopExport.js","containers/Main.js","serviceWorker.js","index.js"],"names":["module","exports","ExportBtn","props","kind","style","disabled","onClick","export","label","saveSettings","Promise","resolve","reject","console","log","tableau","extensions","settings","saveAsync","then","newSavedSettings","catch","setSettings","type","value","settingKey","set","JSON","stringify","initializeMeta","promises","meta","dashboardContent","_dashboard","worksheets","map","worksheet","sheet","item","sheetName","name","selected","changeName","customCols","push","existingCols","modified","getSummaryDataAsync","ignoreSelection","data","columns","cols","existingNames","i","length","j","col","fieldName","dataType","indexOf","ind","k","newCol","order","getSheetColumns","all","sheetArr","sheetMeta","exportToExcel","env","filename","xlsFile","buildExcelBlob","wb","wbout","XLSX","write","bookType","bookSST","ignoreEC","saveAs","Blob","dashboard","utils","book_new","totalSheets","sheetCount","sheetList","columnList","tabNames","metaSheet","idx","find","s","columnMeta","headerOrder","colMeta","column","objCol","o","outputName","decodeDataset","rows","ws","json_to_sheet","header","sheetname","book_append_sheet","dataset","decodeRow","datasetArr","row","dtype","undefined","dval","_dataType","Number","isNaN","formattedValue","v","t","Extension","refreshSettings","sheetSettings","get","parse","updateMeta","disableButton","labelSettings","replace","updateLabel","styleSettings","updateButtonStyle","filenameSettings","updateFilename","configure","payload","popupUrl","window","location","origin","ui","displayDialogAsync","height","width","closePayload","error","errorCode","ErrorCodes","DialogClosedByUser","message","useEffect","initializeAsync","environment","context","tableauVersion","compareVersions","compare","desktopExportHandler","useStyles","makeStyles","theme","root","heading","fontSize","typography","pxToRem","details","alignItems","flexBasis","display","lineHeight","marginBottom","group","color","flexDirection","fontFamily","position","stepper","strikeThrough","textDecoration","marginRight","ExpansionPanel","withStyles","boxShadow","borderBottom","margin","expanded","MuiExpansionPanel","Sheet","rename","classes","inputProps","onChange","e","target","onClear","placeholder","className","square","ExpansionPanelSummary","aria-controls","id","checked","select","ExpansionPanelDetails","min","max","sheets","step","pageSteps","onValueChange","changeOrder","SelectSheets","index","key","selectSheet","newPos","Column","expandIcon","Sheets","colSelect","SelectColumns","placeButtons","bottom","right","ActionButtons","resetSettings","enableButton","save","flexGrow","ConfigureTab","labelProps","filenameProps","Grid","container","xs","Fragment","marginLeft","configBody","logoBanner","backgroundColor","paddingTop","paddingBottom","paddingLeft","Configure","useState","tab","switchTab","array_move","arr","old_index","new_index","splice","initializeDialogAsync","openPayload","src","logo","alt","onTabChange","selectedTabIndex","tabs","content","changeSettings","sheetIdx","colIdx","enableSave","DesktopExport","encodeURI","spacing","align","justify","Typography","component","padding","Main","labelChangedHandler","labelTxt","button","state","setState","filenameChangedHandler","buttonStateChangedHandler","buttonStyleChangedHandler","metaChangedHandler","newSettings","settingsChangedHandler","settingsChanged","resetSettingsHandler","isLoading","renderExtension","renderConfigure","renderDesktopExport","path","render","this","exact","Component","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.800f131a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.78313ace.svg\";","import React from 'react';\nimport { Button } from '@tableau/tableau-ui';\n\nfunction ExportBtn(props) {\n  return (\n      <div>\n         <Button kind={props.style} disabled={props.disabled} onClick={props.export}>{props.label}</Button>\n      </div>\n  );\n}\n\nexport default ExportBtn;\n","import XLSX from 'xlsx';\nimport { saveAs } from 'file-saver';\n\n// Declare this so our linter knows that tableau is a global object\n/* global tableau */\n\nconst saveSettings = () => new Promise((resolve, reject) => {\n  console.log('[func.js] Saving settings');\n  tableau.extensions.settings.saveAsync()\n    .then(newSavedSettings => resolve(newSavedSettings))\n    .catch(reject);\n});\n\nconst setSettings = (type, value) => new Promise((resolve, reject) => {\n  console.log('[func.js] Set settings', type, value);\n  let settingKey = '';\n  switch(type) {\n    case 'sheets':\n      settingKey = 'selectedSheets';\n      break;\n    case 'label':\n      settingKey = 'buttonLabel';\n      break;\n    case 'style':\n      settingKey = 'buttonStyle';\n      break;\n    case 'filename':\n      settingKey = 'filename';\n      break;\n    default:\n      settingKey = 'selectedSheets';\n  }\n  tableau.extensions.settings.set(settingKey, JSON.stringify(value));\n  resolve();\n});\n\nconst getSheetColumns = (sheet, existingCols, modified) => new Promise((resolve, reject) => {\n  sheet.getSummaryDataAsync({ignoreSelection: true}).then((data) => {\n    var columns = data.columns;\n    var cols = [];\n    var existingNames = [];\n    if (modified) {\n      for (var i = 0; i < existingCols.length; i++) {\n        existingNames.push(existingCols[i].name);\n      }\n      for (var j = 0; j < columns.length; j++) {\n        //console.log(columns[j]);\n        var col = {};\n        col.name = columns[j].fieldName;\n        col.dataType = columns[j].dataType;\n        col.changeName = null;\n        if (existingNames.indexOf(columns[j].fieldName) > -1) {\n          var ind = existingNames.indexOf(columns[j].fieldName);\n          col.selected = existingCols[ind].selected;\n        } else {\n          col.selected = false;\n        }\n        cols.push(col);\n      }\n    } else {\n      for (var k = 0; k < columns.length; k++) {\n        var newCol = {};\n        newCol.name = columns[k].fieldName;\n        newCol.selected = true;\n        newCol.order = k + 1;\n        cols.push(newCol);\n      }\n    }\n    resolve(cols);\n  });\n});\n\nconst initializeMeta = () => new Promise((resolve, reject) => {\n  console.log('[func.js] Initialise Meta');\n  var promises = [];\n  const worksheets = tableau.extensions.dashboardContent._dashboard.worksheets;\n\n  var meta = worksheets.map(worksheet => {\n    var sheet = worksheet;\n    var item = {};\n    item.sheetName = sheet.name;\n    item.selected = false;\n    item.changeName = null;\n    item.customCols = false;\n    promises.push(getSheetColumns(sheet, null, false));\n    return item;\n  });\n\n  console.log(`[func.js] Found ${meta.length} sheets`, meta);\n\n  Promise.all(promises).then((sheetArr) => {\n    for (var i = 0; i < sheetArr.length; i++) {\n      var sheetMeta = meta[i];\n      sheetMeta.columns = sheetArr[i];\n      meta[i] = sheetMeta;\n      console.log(`[func.js] Added ${sheetArr[i].length} columns to ${sheetMeta.sheetName}`, meta);\n    }\n    console.log(`[func.js] Meta initialised`, meta);\n    resolve(meta);\n  });\n});\n\nconst exportToExcel = (meta, env, filename) => new Promise((resolve, reject) => {\n  let xlsFile = \"export.xlsx\";\n  if (filename && filename.length > 0) {\n    xlsFile = filename + \".xlsx\";\n  }\n  buildExcelBlob(meta).then(wb => {\n    // add ignoreEC:false to prevent excel crashes during text to column\n    var wopts = { bookType:'xlsx', bookSST:false, type:'array', ignoreEC:false };\n    var wbout = XLSX.write(wb,wopts);\n    saveAs(new Blob([wbout],{type:\"application/octet-stream\"}), xlsFile);\n    resolve();\n  });\n});\n\n// krisd: move excel creation to caller (to support extra export to methodss)\n// callback receives a blob to save or transfer\nconst buildExcelBlob = (meta) => new Promise((resolve, reject) => {\n  console.log(\"[func.js] Got Meta\", meta);\n  // func.saveSettings(meta, function(newSettings) {\n    // console.log(\"Saved settings\", newSettings);\n  const worksheets = tableau.extensions.dashboardContent.dashboard.worksheets;\n  const wb = XLSX.utils.book_new();\n  let totalSheets = 0;\n  let sheetCount = 0;\n  const sheetList = [];\n  const columnList = [];\n  const tabNames = [];\n  for (let i =0; i < meta.length; i++) {\n    if (meta[i].selected) {\n      sheetList.push(meta[i].sheetName);\n      tabNames.push(meta[i].changeName || meta[i].sheetName);\n      columnList.push(meta[i].columns);\n      totalSheets = totalSheets + 1;\n    }\n  }\n  sheetList.map((metaSheet, idx) => {\n    console.log(\"[func.js] Finding sheet\", metaSheet, worksheets);\n    const sheet = worksheets.find(s => s.name === metaSheet);\n    // eslint-disable-next-line\n    sheet.getSummaryDataAsync({ignoreSelection: true}).then((data) => {\n      const columns = data.columns;\n      const columnMeta = columnList[sheetCount];\n      const headerOrder = [];\n      columnMeta.map((colMeta, idx) => {\n        if (colMeta.selected) {\n          headerOrder.push(colMeta.changeName || colMeta.name);\n        }\n        return colMeta;\n      });\n      columns.map((column, idx) => {\n        //console.log(\"[func.js] Finding column\", column.fieldName, columnMeta);\n        const objCol = columnMeta.find(o => o.name === column.fieldName);\n        if (objCol) {\n          let col = { ...column, selected: objCol.selected  }\n          col.outputName = objCol.changeName || objCol.name;\n          columns[idx] = col;\n          return col;\n        } else {\n          return null;\n        }\n      });\n      //console.log(\"[func.js] Running decodeRows\", columns, data.data);\n      decodeDataset(columns, data.data)\n        .then((rows) => {\n          //console.log(\"[func.js] decodeRows returned\", rows);\n          console.log(\"[func.js] Header Order\", headerOrder);\n          var ws = XLSX.utils.json_to_sheet(rows, {header: headerOrder});\n          var sheetname = tabNames[sheetCount];\n          sheetCount = sheetCount + 1;\n          XLSX.utils.book_append_sheet(wb, ws, sheetname);\n          if (sheetCount === totalSheets) {\n            resolve(wb);\n          }\n      });\n    });\n    return sheet;\n  });\n});\n\n\n// krisd: Remove recursion to work with larger data sets\n// and translate cell data types\nconst decodeDataset = (columns, dataset) => new Promise((resolve, reject) => {\n  let promises = [];\n  for (let i=0; i<dataset.length; i++) {\n    promises.push(decodeRow(columns, dataset[i]));\n  }\n  Promise.all(promises).then((datasetArr) => {\n    //console.log('[func.js] datasetArr', datasetArr);\n    resolve(datasetArr);\n  });\n\n});\n\nconst decodeRow = (columns, row) => new Promise((resolve, reject) => {\n  let meta = {};\n  for (let j = 0; j < columns.length; j++) {\n    if (columns[j].selected) {\n      //meta[columns[j].fieldName] = thisRow[j].formattedValue;\n\n      // krisd: let's assign the sheetjs type according to the summary data column type\n      let dtype = undefined;\n      let dval = undefined;\n      switch (columns[j]._dataType) {\n        case 'int':\n        case 'float':\n          dtype = 'n';\n          dval = Number(row[j].value);  // let nums be raw w/o formatting\n          if (isNaN(dval)) dval = row[j].formattedValue;  // protect in case issue\n          break;\n        case 'date':\n        case 'date-time':\n          dtype = 's';\n          dval = row[j].formattedValue;\n          break;\n        case 'bool':\n          dtype = 'b';\n          dval = row[j].value;\n          break;\n        default:\n          dtype = 's';\n          dval = row[j].formattedValue;\n      }\n\n      let o = {v:dval, t:dtype};\n      meta[columns[j].outputName] = o;\n    }\n  }\n  resolve(meta);\n});\n\n\n\nexport {\n  initializeMeta,\n  saveSettings,\n  setSettings,\n  exportToExcel,\n}\n","import React, { useEffect } from 'react';\nimport ExportBtn from './ExportBtn/ExportBtn';\nimport { initializeMeta, saveSettings, setSettings, exportToExcel } from '../func/func';\nimport compareVersions from 'compare-versions';\n\n// Declare this so our linter knows that tableau is a global object\n/* global tableau */\n\nfunction Extension (props) {\n\n  useEffect(() => {\n    console.log('[Extension.js] Props Changed', props);\n  }, [props]);\n\n  useEffect(() => {\n    console.log('[Extension.js] useEffect');\n    console.log('[Extension.js] Initialise Extension', props);\n    //Initialise Extension\n    tableau.extensions.initializeAsync({'configure': configure}).then(() => {\n\n      let sheetSettings = tableau.extensions.settings.get('selectedSheets');\n\n      if (sheetSettings && sheetSettings != null) {\n        console.log('[Extension.js] Existing Sheet Settings Found', JSON.parse(sheetSettings));\n        props.updateMeta(JSON.parse(sheetSettings));\n        props.disableButton(false);\n      } else {\n        console.log('[Extension.js] Can\\'t find existing sheet settings');\n        initializeMeta()\n          .then(meta => {\n            props.updateMeta(meta);\n            setSettings('sheets', meta);\n            setSettings('label', 'Export All');\n            return saveSettings();\n          })\n          .then(meta => configure(meta));\n      }\n\n      let labelSettings = tableau.extensions.settings.get('buttonLabel');\n\n      if (labelSettings && labelSettings != null) {\n        labelSettings = labelSettings.replace(/\"/g,'');\n        console.log('[Extension.js] initializeAsync Existing Label Settings Found', labelSettings);\n        props.updateLabel(labelSettings);\n      }\n\n      let styleSettings = tableau.extensions.settings.get('buttonStyle');\n\n      if (styleSettings && styleSettings != null) {\n        console.log('[Extension.js] initializeAsync Existing Label Style Found', styleSettings);\n        props.updateButtonStyle(styleSettings);\n      }\n\n      let filenameSettings = tableau.extensions.settings.get('filename');\n\n      if (filenameSettings && filenameSettings != null) {\n        console.log('[Extension.js] initializeAsync Existing Filename Found', filenameSettings);\n        props.updateFilename(filenameSettings);\n      }\n\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  function refreshSettings() {\n    let sheetSettings = tableau.extensions.settings.get('selectedSheets');\n\n    if (sheetSettings && sheetSettings != null) {\n      console.log('[Extension.js] refreshSettings Existing Sheet Settings Found. Refreshing', JSON.parse(sheetSettings));\n      props.updateMeta(JSON.parse(sheetSettings));\n      props.disableButton(false);\n    }\n\n    let labelSettings = tableau.extensions.settings.get('buttonLabel');\n\n    if (labelSettings && labelSettings != null) {\n      labelSettings = labelSettings.replace(/\"/g,'');\n      console.log('[Extension.js] refreshSettings Existing Label Settings Found', labelSettings);\n      props.updateLabel(labelSettings);\n    }\n\n    let styleSettings = tableau.extensions.settings.get('buttonStyle');\n\n    if (styleSettings && styleSettings != null) {\n      console.log('[Extension.js] refreshSettings Existing Label Style Found', styleSettings);\n      props.updateButtonStyle(styleSettings);\n    }\n\n    let filenameSettings = tableau.extensions.settings.get('filename');\n\n    if (filenameSettings && filenameSettings != null) {\n      console.log('[Extension.js] refreshSettings Existing Filename Found', filenameSettings);\n      props.updateFilename(filenameSettings);\n    }\n  }\n\n  function configure (meta) {\n    let payload = '';\n    if (meta) {\n      payload = JSON.stringify(meta);\n    }\n    console.log('[Extension.js] configure Sending payload', payload);\n    const popupUrl = `${window.location.origin}/configure`;\n    tableau.extensions.ui.displayDialogAsync(popupUrl, payload, { height: 500, width: 500 }).then((closePayload) => {\n      refreshSettings();\n      console.log('[Extension.js] Config window closed', props)\n    }).catch((error) => {\n      switch(error.errorCode) {\n        case tableau.ErrorCodes.DialogClosedByUser:\n          console.log('[Extension.js] Dialog was closed by user');\n          refreshSettings();\n          console.log('[Extension.js] Config window closed', props);\n          break;\n        default:\n          console.error('[Extension.js]', error.message);\n      }\n    });\n  }\n\n  function clickExportHandler() {\n    if (tableau.extensions.environment.context === \"server\") {\n      exportToExcel(props.meta, 'server', props.filename);\n    } else {\n\t\t\tconsole.log('[Extension.js] Tableau Version', tableau.extensions.environment.tableauVersion);\n      if (compareVersions.compare(tableau.extensions.environment.tableauVersion, '2019.4.0', '>=') ) {\n\t\t\t\texportToExcel(props.meta, 'desktop', props.filename);\n\t\t\t} else {\n\t\t\t\tdesktopExportHandler ();\n\t\t\t}\n\n    }\n  }\n\n  function desktopExportHandler () {\n    const popupUrl = `${window.location.origin}/desktopexport`;\n    tableau.extensions.ui.displayDialogAsync(popupUrl, '', { height: 350, width: 400 }).then((closePayload) => {\n      console.log('[Extension.js] Export window closed')\n    }).catch((error) => {\n      switch(error.errorCode) {\n        case tableau.ErrorCodes.DialogClosedByUser:\n          console.log('[Extension.js] Export window was closed by user');\n          break;\n        default:\n          console.error('[Extension.js]', error.message);\n      }\n    });\n  }\n\n  return (\n    <ExportBtn label={props.label} style={props.style} disabled={props.disabled} export={clickExportHandler}></ExportBtn>\n  );\n}\n\nexport default Extension;\n","import React from 'react';\nimport { Checkbox, TextField, Stepper } from '@tableau/tableau-ui';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport MuiExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n  details: {\n    alignItems: 'center',\n  },\n  column: {\n    flexBasis: '50%',\n  },\n  label: {\n    display: 'block',\n    fontSize: 10,\n    lineHeight: '10px',\n    order: 0,\n    marginBottom: 3,\n  },\n  group: {\n    color: 'rgba(0, 0, 0, 0.56)',\n    display: 'inline-flex',\n    flexDirection: 'column',\n    fontFamily: 'Benton Sans, Arial, Helvetica, sans-serif',\n    position: 'relative',\n  },\n  stepper: {\n    marginBottom: 13\n  },\n  strikeThrough: {\n    textDecoration: 'line-through',\n    marginRight: 5,\n    color: 'rgba(156, 156, 156, 0.8)',\n  }\n}));\n\nconst ExpansionPanel = withStyles({\n  root: {\n    boxShadow: 'none',\n    '&:not(:last-child)': {\n      borderBottom: 0,\n    },\n    '&:before': {\n      display: 'none',\n    },\n    '&$expanded': {\n      margin: 'auto',\n    },\n  },\n  expanded: {},\n})(MuiExpansionPanel);\n\nfunction Sheet(props) {\n\n  const classes = useStyles();\n\n  const inputProps = {\n    label: 'Rename',\n    onChange: e => props.changeName(e.target.value),\n    onClear: () => {\n      props.changeName(null);\n    },\n    placeholder: props.name || 'Override Export Tab Name',\n    style: { width: 200 },\n    value: props.rename || '',\n  };\n\n  function renderSheetName(name, rename) {\n    if (rename) {\n      return (\n        <div>\n          <span className={classes.strikeThrough}>{name}</span>\n          <span>{rename}</span>\n        </div>\n      )\n    }\n    return (\n      <div>{name}</div>\n    )\n  }\n\n  return (\n    <div className={classes.root}>\n      <ExpansionPanel square expanded={props.selected}>\n        <ExpansionPanelSummary\n          aria-controls=\"panel1c-content\"\n          id=\"panel1c-header\"\n        >\n          <div>\n            <Checkbox checked={props.selected} onChange={props.select}>{renderSheetName(props.name, props.rename)}</Checkbox>\n          </div>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails className={classes.details}>\n          <div className={classes.column}>\n            <TextField {...inputProps} />\n          </div>\n          <div className={classes.column}>\n            <div className={classes.group}>\n              <label className={classes.label}>Change Order</label>\n              <Stepper min={1} max={props.sheets.length} step={1} pageSteps={1} value={props.id + 1} onValueChange={value => props.changeOrder(value)} className={classes.stepper} />\n            </div>\n          </div>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    </div>\n  );\n\n}\n\nexport default Sheet;\n","import React from 'react';\nimport Sheet from './Sheet/Sheet'\n\nfunction SelectSheets(props) {\n\n  if (props && props.sheets) {\n    return props.sheets.map((sheet, index) => {\n      return (\n        <Sheet\n          id={index}\n          key={sheet.sheetName}\n          name={sheet.sheetName}\n          rename={sheet.changeName}\n          sheets={props.sheets}\n          selected={sheet.selected}\n          select={() => props.selectSheet(index)}\n          changeName={(name) => props.changeName(index,name)}\n          changeOrder={(newPos) => props.changeOrder(index,newPos)}\n          />\n      );\n    });\n  } else {\n    return (\n      <div></div>\n    )\n  }\n\n}\n\nexport default SelectSheets;\n","import React from 'react';\nimport { Checkbox, TextField, Stepper } from '@tableau/tableau-ui';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport MuiExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n  details: {\n    alignItems: 'center',\n  },\n  column: {\n    flexBasis: '50%',\n  },\n  label: {\n    display: 'block',\n    fontSize: 10,\n    lineHeight: '10px',\n    order: 0,\n    marginBottom: 3,\n  },\n  group: {\n    color: 'rgba(0, 0, 0, 0.56)',\n    display: 'inline-flex',\n    flexDirection: 'column',\n    fontFamily: 'Benton Sans, Arial, Helvetica, sans-serif',\n    position: 'relative',\n  },\n  stepper: {\n    marginBottom: 13\n  },\n  strikeThrough: {\n    textDecoration: 'line-through',\n    color: 'rgba(156, 156, 156, 0.8)',\n    marginRight: 5,\n  }\n}));\n\nconst ExpansionPanel = withStyles({\n  root: {\n    boxShadow: 'none',\n    '&:not(:last-child)': {\n      borderBottom: 0,\n    },\n    '&:before': {\n      display: 'none',\n    },\n    '&$expanded': {\n      margin: 'auto',\n    },\n  },\n  expanded: {},\n})(MuiExpansionPanel);\n\nfunction Column(props) {\n\n  const classes = useStyles();\n\n  const inputProps = {\n    label: 'Rename',\n    onChange: e => props.changeName(e.target.value),\n    onClear: () => {\n      props.changeName(null);\n    },\n    placeholder: props.name || 'Override Export Column Name',\n    style: { width: 200 },\n    value: props.rename || '',\n  };\n\n  function renderColName(name, rename) {\n    if (rename) {\n      return (\n        <div>\n          <span className={classes.strikeThrough}>{name}</span>\n          <span>{rename}</span>\n        </div>\n      )\n    }\n    return (\n      <div>{name}</div>\n    )\n  }\n\n  return (\n    <div className={classes.root}>\n      <ExpansionPanel square>\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1c-content\"\n          id=\"panel1c-header\"\n        >\n          <div>\n            <Checkbox checked={props.selected} onChange={props.select}>{renderColName(props.name, props.rename)}</Checkbox>\n          </div>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails className={classes.details}>\n          <div className={classes.column}>\n            <TextField {...inputProps} />\n          </div>\n          <div className={classes.column}>\n            <div className={classes.group}>\n              <label className={classes.label}>Change Order</label>\n              <Stepper min={1} max={props.cols.length} step={1} pageSteps={1} value={props.id + 1} onValueChange={value => props.changeOrder(value)} className={classes.stepper} />\n            </div>\n          </div>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    </div>\n  );\n\n}\n\nexport default Column;\n","import React from 'react';\nimport Column from './Column/Column'\n\nfunction Sheets(props) {\n\n  if (props && props.cols) {\n    return props.cols.map((col, index) => {\n      return (\n        <Column\n          id={index}\n          key={col.name}\n          name={col.name}\n          rename={col.changeName}\n          selected={col.selected}\n          select={() => props.colSelect(props.id, index)}\n          changeName={(name) => props.changeName(props.id, index, name)}\n          cols={props.cols}\n          changeOrder={(newPos) => props.changeOrder(props.id, index, newPos)}\n          />\n      );\n    });\n  } else {\n    return (\n      <div></div>\n    )\n  }\n\n}\n\nexport default Sheets;\n","import React from 'react';\nimport Sheet from './Sheet/Sheet'\n\nfunction SelectColumns(props) {\n\n  if (props && props.sheets) {\n    return props.sheets.map((sheet, index) => {\n      if (sheet.selected) {\n        return (\n          <div key={sheet.sheetName}>\n            <div><b>{sheet.sheetName}</b></div>\n            <Sheet\n              id={index}\n              name={sheet.sheetName}\n              cols={sheet.columns}\n              colSelect={props.colSelect}\n              changeName={props.changeName}\n              changeOrder={props.changeOrder}\n              />\n          </div>\n        );\n      } else {\n        return (\n          <div key={sheet.sheetName}></div>\n        )\n      }\n    });\n  } else {\n    return (\n      <div></div>\n    )\n  }\n\n}\n\nexport default SelectColumns;\n","import React from 'react';\nimport { Button } from '@tableau/tableau-ui';\n\nconst placeButtons = {\n  bottom: 10,\n  right: 10,\n  position: 'fixed'\n}\n\nfunction ActionButtons(props) {\n\n  return (\n    <div style={placeButtons}>\n      <Button kind={'outline'} style={{marginRight: 12}} onClick={props.resetSettings}>Reset</Button>\n      <Button kind={'primary'} style={{marginRight: 12}} disabled={!props.enableButton} onClick={props.save}>Save Changes</Button>\n    </div>\n  )\n\n}\n\nexport default ActionButtons;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { TextField, DropdownSelect } from '@tableau/tableau-ui';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n}));\n\nfunction ConfigureTab(props) {\n  const classes = useStyles();\n\n  const labelProps = {\n    label: 'Button Label',\n    onChange: e => {\n      console.log('[ConfigureTab.js] Updating Button Label',e.target.value)\n      props.updateLabel(e.target.value)\n    },\n    onClear: () => {\n      props.updateLabel('Export All');\n    },\n    placeholder: 'Button Label',\n    style: { width: 400 },\n    value: props.label || '',\n  };\n\n  const filenameProps = {\n    label: 'Export Filename',\n    onChange: e => props.updateFilename(JSON.stringify(e.target.value)),\n    onClear: () => {\n      props.updateFilename('ExportAll');\n    },\n    placeholder: 'Export Filename',\n    style: { width: 400 },\n    value: props.filename || '',\n  };\n\n  const styleDropDown = {\n    marginLeft: 10\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container>\n        <Grid item xs={12}>\n          <TextField {...labelProps} />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField {...filenameProps} />\n        </Grid>\n        <Grid item xs={12}>\n          <React.Fragment>\n            Set Button Style to:\n            <DropdownSelect kind='line' value={props.style} onChange={e => props.updateButtonStyle(JSON.stringify(e.target.value))} style={styleDropDown}>\n              <option>outline</option>\n              <option>primary</option>\n              <option>destructive</option>\n            </DropdownSelect>\n          </React.Fragment>\n        </Grid>\n      </Grid>\n    </div>\n  )\n\n}\n\nexport default ConfigureTab;\n","import React, { useState, useEffect } from 'react';\nimport { Tabs } from '@tableau/tableau-ui';\nimport SelectSheets from './SelectSheets/SelectSheets';\nimport SelectColumns from './SelectColumns/SelectColumns';\nimport ActionButtons from './ActionButtons/ActionButtons';\nimport ConfigureTab from './ConfigureTab/ConfigureTab';\nimport { saveSettings, setSettings } from '../func/func';\nimport logo from './logo.svg';\nimport './Configure.css';\n\n// Declare this so our linter knows that tableau is a global object\n/* global tableau */\n\nconst configBody = {\n  height: 'calc(100vh - 170px)',\n}\n\nconst logoBanner = {\n  backgroundColor: 'rgb(245, 245, 245)',\n  height: 26,\n  paddingTop: 12,\n  paddingBottom: 12,\n  paddingLeft: 18,\n}\n\nfunction Configure(props) {\n  const [tab, switchTab] = useState(0);\n  const tabs = [ { content: 'Select Sheets'}, { content: 'Select Columns' }, { content: 'Configure' } ];\n\n  console.log('[Configure.js] Initialise Config Screen', props);\n\n  useEffect(() => {\n    console.log('[Configure.js] useEffect');\n    //Initialise Extension\n    tableau.extensions.initializeDialogAsync().then((openPayload) => {\n\n      console.log('[Configure.js] Initialise Dialog', openPayload);\n\n      let sheetSettings = tableau.extensions.settings.get('selectedSheets');\n\n      if (sheetSettings && sheetSettings != null) {\n        console.log('[Configure.js] Existing Sheet Settings Found', sheetSettings);\n        props.updateMeta(JSON.parse(sheetSettings));\n      }\n\n      let labelSettings = tableau.extensions.settings.get('buttonLabel');\n\n      if (labelSettings && labelSettings != null) {\n        labelSettings = labelSettings.replace(/\"/g,'');\n        console.log('[Configure.js] initializeDialogAsync Existing Label Settings Found', labelSettings);\n        props.updateLabel(labelSettings);\n      }\n\n      let styleSettings = tableau.extensions.settings.get('buttonStyle');\n\n      if (styleSettings && styleSettings != null) {\n        console.log('[Configure.js] initializeDialogAsync Existing Label Style Found', styleSettings);\n        props.updateButtonStyle(styleSettings);\n      }\n\n      let filenameSettings = tableau.extensions.settings.get('filename');\n\n      if (filenameSettings && filenameSettings != null) {\n        console.log('[Configure.js] initializeDialogAsync Existing Filename Found', filenameSettings);\n        props.updateFilename(filenameSettings);\n      }\n\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  function selectSheetHandler(i) {\n    console.log('[Configure.js] selectSheetHandler', i);\n    const meta = props.meta;\n    meta[i].selected = !meta[i].selected;\n    props.updateMeta(meta);\n    props.changeSettings(true);\n  }\n\n  function selectColumnHandler(sheetIdx, colIdx) {\n    console.log('[Configure.js] selectColumnHandler', sheetIdx, colIdx);\n    const meta = props.meta;\n    const sheet = meta[sheetIdx];\n    sheet.columns[colIdx].selected = !sheet.columns[colIdx].selected;\n    meta[sheetIdx] = sheet;\n    props.updateMeta(meta);\n    props.changeSettings(true);\n  }\n\n  function changeSheetNameHandler(i, name) {\n    console.log('[Configure.js] changeSheetNameHandler', i, name);\n    const meta = props.meta;\n    meta[i].changeName = name;\n    props.updateMeta(meta);\n    props.changeSettings(true);\n  }\n\n  function changeColumnNameHandler(sheetIdx, colIdx, name) {\n    console.log('[Configure.js] changeColumnNameHandler', sheetIdx, colIdx, name);\n    const meta = props.meta;\n    const sheet = meta[sheetIdx];\n    sheet.columns[colIdx].changeName = name;\n    meta[sheetIdx] = sheet;\n    props.updateMeta(meta);\n    props.changeSettings(true);\n  }\n\n  function array_move(arr, old_index, new_index) {\n    if (new_index >= arr.length) {\n        var k = new_index - arr.length + 1;\n        while (k--) {\n            arr.push(undefined);\n        }\n    }\n    arr.splice(new_index, 0, arr.splice(old_index, 1)[0]);\n    return arr; // for testing\n  };\n\n  function changeSheetOrderHandler(i, newPos) {\n    console.log('[Configure.js] changeSheetOrderHandler', i, newPos);\n    if (newPos > 0) {\n      const meta = array_move(props.meta, i, newPos - 1);\n      props.updateMeta(meta);\n      props.changeSettings(true);\n    }\n  }\n\n  function changeColumnOrderHandler(sheetIdx, colIdx, newPos) {\n    console.log('[Configure.js] changeColumnOrderHandler', sheetIdx, colIdx, newPos);\n    if (newPos > 0) {\n      const meta = props.meta;\n      const sheet = meta[sheetIdx];\n      const columns = array_move(sheet.columns, colIdx, newPos - 1);\n      meta[sheetIdx].columns = columns;\n      props.updateMeta(meta);\n      props.changeSettings(true);\n    }\n  }\n\n  function updateLabelHandler(label) {\n    console.log('[Configure.js] changeUpdateLabelHandler', label);\n    props.updateLabel(label);\n    props.changeSettings(true);\n  }\n\n  function updateButtonStyleHandler(style) {\n    console.log('[Configure.js] changeLabelStyleHandler', style);\n    props.updateButtonStyle(style);\n    props.changeSettings(true);\n  }\n\n  function updateFilenameHandler(filename) {\n    console.log('[Configure.js] updateFilenameHandler', filename);\n    props.updateFilename(filename);\n    props.changeSettings(true);\n  }\n\n  function saveSettingsHandler() {\n    console.log('[Configure.js] saveSettingsHandler - Saving Settings', props);\n    const meta = props.meta;\n    const label = props.label;\n    const style = props.style;\n    const filename = props.filename;\n    props.disableButton(false);\n    setSettings('sheets', meta)\n      .then(setSettings('label', label))\n      .then(setSettings('style', style))\n      .then(setSettings('filename', filename))\n      .then(saveSettings())\n      .then(props.changeSettings(false))\n  }\n\n  function resetSettingsHandler() {\n    console.log('[Configure.js] resetSettingsHandler - Reset Settings');\n    props.resetSettings();\n  }\n\n  return (\n      <div>\n      <div style={logoBanner}><img style={{height:20}} src={logo} alt='The Information Lab'/></div>\n      <Tabs\n        onTabChange={(index) => {\n          switchTab(index);\n        }}\n        selectedTabIndex={tab}\n        tabs={tabs}\n        ><div style={configBody}>\n          { tab === 0 ? <SelectSheets sheets={props.meta} selectSheet={selectSheetHandler} changeOrder={changeSheetOrderHandler} changeName={changeSheetNameHandler} /> : null }\n          { tab === 1 ? <SelectColumns sheets={props.meta} colSelect={selectColumnHandler} changeName={changeColumnNameHandler} changeOrder={changeColumnOrderHandler}/> : null }\n          { tab === 2 ? <ConfigureTab label={props.label} filename={props.filename} style={props.style} updateLabel={updateLabelHandler} updateButtonStyle={updateButtonStyleHandler} updateFilename={updateFilenameHandler}/> : null }\n        </div>\n      </Tabs>\n      <ActionButtons enableButton={props.enableSave} save={saveSettingsHandler} resetSettings={resetSettingsHandler} />\n      </div>\n  );\n}\n\nexport default Configure;\n","import React, { useEffect } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport './DesktopExport.css';\n// import { exportToExcel } from '../func/func';\n\n// Declare this so our linter knows that tableau is a global object\n/* global tableau */\n\nfunction DesktopExport() {\n\n  console.log('[DesktopExport.js] Initialise Export Screen');\n\n  const emailMessage = `Hi Michael,\n\nI'm such a huge fan of the Export All extension created by Craig Bloodworth. Trouble is my users make use of Tableau Desktop just as much as Server and I really want them to feel the same love for all things data in Excel. Please please please please enable the downloads API in extensions. It would make such a huge difference to my Tableau life. I promise I won't export all my data, just the important stuff.\n\nThanks so much for your time and helping to build an amazing product!`;\n\n  const encodedMessage = encodeURI(emailMessage);\n  const hrefEncoded = 'mailto:mkovner@tableau.com?cc=craig.bloodworth@theinformationlab.co.uk&subject=Please%20Enable%20Downloads%20in%20Desktop%20Extensions&body=' + encodedMessage;\n\n  useEffect(() => {\n    console.log('[DesktopExport.js] useEffect');\n    //Initialise Extension\n    tableau.extensions.initializeDialogAsync().then((openPayload) => {\n\n      console.log('[DesktopExport.js] Initialise Dialog', openPayload);\n\n      let sheetSettings = tableau.extensions.settings.get('selectedSheets');\n\n      if (sheetSettings && sheetSettings != null) {\n        // console.log('[DesktopExport.js] Existing Sheet Settings Found', sheetSettings);\n        // const meta = JSON.parse(sheetSettings);\n        // exportToExcel(meta, 'desktop')\n        //   .then((blob) => {\n        //     navigator.webkitPersistentStorage.requestQuota (\n        //         blob.byteLength, function(grantedBytes) {\n        //             window.webkitRequestFileSystem(window.PERSISTENT, grantedBytes, onInitFs, handleError);\n        //\n        //         }, function(e) { console.log('Error', e); }\n        //     );\n        //   });\n      }\n\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Grid\n      container\n      spacing={0}\n      align=\"left\"\n      justify=\"center\"\n    >\n      <Grid item>\n        <Typography component=\"div\" style={{padding: 20}}>\n          <p>Hi There!</p>\n          <p>It looks like you're trying to create the Excel file using a desktop version earlier than 2019.4. Unfortunately you {\"can't\"} as the download function is disabled, however there are two solutions. Either publish your dashboard to Server where the Excel file will download as expected, or upgrade your copy of Desktop to 2019.4 or greater.</p>\n          <p>To those who've previously emailed Tableau to request they enable the download feature...we did it!! Thank you so much for taking the time to present the case, I {\"can't\"} believe how many emails you sent. {\"I'm\"} humbled.</p>\n          <p>Craig</p>\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default DesktopExport;\n","import React, { Component }  from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport Extension from '../components/Extension/Extension';\nimport Configure from '../components/Configure/Configure';\nimport DesktopExport from '../components/DesktopExport/DesktopExport';\nimport './Main.css';\n\nclass Main extends Component {\n\n  constructor(props) {\n    console.log('[Main.js] constructor');\n    super(props);\n    this.state = {\n      meta : undefined,\n      button: {\n        label : 'Export All',\n        style: 'outline',\n        disabled : true\n      },\n      isLoading: false,\n      filename: 'ExportAll',\n      settingsChanged: false,\n    };\n    console.log('[Main.js] state initialised', this.state);\n  }\n\n  componentWillMount () {\n    console.log('[Main.js] componentWillMount');\n  }\n\n  componentDidMount() {\n    console.log('[Main.js] componentDidMount');\n  }\n\n  labelChangedHandler = (labelTxt) => {\n    console.log(`[Main.js] Updating label text to ${labelTxt}`);\n    const button = {...this.state.button, label: labelTxt};\n    this.setState({button});\n  }\n\n  filenameChangedHandler = (filename) => {\n    console.log(`[Main.js] Updating filename to ${JSON.parse(filename)}`);\n    this.setState({filename: JSON.parse(filename)});\n  }\n\n  buttonStateChangedHandler = (disabled) => {\n    console.log(`[Main.js] Changing button state to ${disabled}`);\n    const button = {...this.state.button, disabled};\n    this.setState({button});\n  }\n\n  buttonStyleChangedHandler = (style) => {\n    console.log(`[Main.js] Changing button style to ${style}`);\n    const button = {...this.state.button, style: JSON.parse(style)};\n    this.setState({button});\n  }\n\n  metaChangedHandler = (newSettings) => {\n    console.log('[Main.js] Meta changed', newSettings);\n    this.setState({meta: newSettings});\n  }\n\n  settingsChangedHandler = (state) => {\n    console.log('[Main.js] Settings changed');\n    this.setState({settingsChanged: state});\n  }\n\n  resetSettingsHandler = () => {\n    console.log('[Main.js] Reset Settings');\n    this.setState({\n      meta : undefined,\n      button: {\n        label : 'Export All',\n        style: 'outline',\n        disabled : true\n      },\n      isLoading: false,\n      filename: 'ExportAll',\n      settingsChanged: false,\n    });\n  }\n\n  renderExtension = () => {\n    return (\n      <Extension label={this.state.button.label} meta={this.state.meta} style={this.state.button.style} filename={this.state.filename} disabled={this.state.button.disabled} updateMeta={this.metaChangedHandler} disableButton={this.buttonStateChangedHandler} updateLabel={this.labelChangedHandler}  updateButtonStyle={this.buttonStyleChangedHandler} updateFilename={this.filenameChangedHandler} />\n    )\n  }\n\n  renderConfigure = () => {\n    return (\n      <Configure label={this.state.button.label} meta={this.state.meta} style={this.state.button.style} filename={this.state.filename} enableSave={this.state.settingsChanged} updateMeta={this.metaChangedHandler} disableButton={this.buttonStateChangedHandler} updateLabel={this.labelChangedHandler} changeSettings={this.settingsChangedHandler} updateButtonStyle={this.buttonStyleChangedHandler} updateFilename={this.filenameChangedHandler} resetSettings={this.resetSettingsHandler}/>\n    )\n  }\n\n  renderDesktopExport = () => {\n    return (\n      <DesktopExport />\n    )\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div>\n          <Route path=\"/\" render={this.renderExtension} exact />\n          <Route path=\"/configure\" render={this.renderConfigure} exact />\n          <Route path=\"/desktopexport\" render={this.renderDesktopExport} exact />\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default Main;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Main from './containers/Main';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Main />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}